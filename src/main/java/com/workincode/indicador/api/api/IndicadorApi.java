/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.workincode.indicador.api.api;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import com.workincode.indicador.api.model.IndicadorRequest;
import com.workincode.indicador.api.model.IndicadorResponse;

import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-06-10T19:56:12.738-04:00[America/Santiago]")
@Validated
@Api(value = "Indicador", description = "the Indicador API")
public interface IndicadorApi {

    default IndicadorApiDelegate getDelegate() {
        return new IndicadorApiDelegate() {};
    }

    /**
     * POST /indicador/ : Obtiene el indicador deseado
     *
     * @param indicadorRequest Se envia una fecha y el indicador deseado por body (optional)
     * @return obtiene el usuario (status code 200)
     */
    @ApiOperation(value = "Obtiene el indicador deseado", nickname = "indicadorPost", notes = "", response = IndicadorResponse.class, tags={ "Indicador", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "obtiene el usuario", response = IndicadorResponse.class) })
    @PostMapping(
        value = "/indicador/",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<IndicadorResponse> indicadorPost(@ApiParam(value = "Se envia una fecha y el indicador deseado por body"  )  @Valid @RequestBody(required = false) IndicadorRequest indicadorRequest) {
        return getDelegate().indicadorPost(indicadorRequest);
    }

}
